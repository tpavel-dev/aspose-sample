plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
//    id 'propdeps'
//    id 'propdeps-idea'
}


ext {
    deploy_version = "1.0.0"
    release_version = "1.0.0"
    app_name = "company-service"
    app_module_name = "company-service-app"
    set('springBootAdminVersion', "2.1.6")
}
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'http://repo.spring.io/plugins-release' }
    maven { url "https://plugins.gradle.org/m2/" }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

test {
//    enabled = false
    enabled = true
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
}

springBoot {
    mainClassName = 'company.app.CompanyServiceApp'
}


dependencies {
    compileOnly "org.projectlombok:lombok:$lombok"
    testCompileOnly "org.projectlombok:lombok:$lombok"
    testImplementation "org.projectlombok:lombok:$lombok"
    annotationProcessor "org.projectlombok:lombok:$lombok"
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'de.codecentric:spring-boot-admin-starter-client'
    compile 'de.codecentric:spring-boot-admin-starter-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    testImplementation("org.springframework.boot:spring-boot-starter-test") {
//            exclude(module = "junit")
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

}

compileJava.dependsOn(processResources)

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
    }
}



